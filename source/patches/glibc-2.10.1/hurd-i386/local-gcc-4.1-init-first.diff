2007-07-22  Thomas Schwinge  <tschwinge@gnu.org>

        * sysdeps/mach/hurd/i386/init-first.c: Undo parts of Roland's `r 1.43'
        to `r 1.44' changes.
        (_hurd_stack_setup): Take a ``void *'' argument.  Save the caller into
        CALLER and pass that one on.
        (init): Avoid an ugly typecast.

---
 sysdeps/mach/hurd/i386/init-first.c |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

--- a/sysdeps/mach/hurd/i386/init-first.c
+++ b/sysdeps/mach/hurd/i386/init-first.c
@@ -334,11 +334,11 @@
    stack set up just as the user will see it, so it can switch stacks.  */
 
 void
-_dl_init_first (void)
+_dl_init_first (int argc, ...)
 {
   first_init ();
 
-  init ((int *) __builtin_frame_address (0) + 2);
+  init (&argc);
 }
 #endif
 
@@ -365,23 +365,23 @@
    This poorly-named function is called by static-start.S,
    which should not exist at all.  */
 void
-_hurd_stack_setup (void)
+_hurd_stack_setup (void *arg, ...)
 {
-  intptr_t caller = (intptr_t) __builtin_return_address (0);
+  void *caller = (&arg)[-1];
 
   void doinit (intptr_t *data)
     {
       /* This function gets called with the argument data at TOS.  */
-      void doinit1 (void)
+      void doinit1 (volatile int argc, ...)
 	{
-	  init ((int *) __builtin_frame_address (0) + 2);
+	  init ((int *) &argc);
 	}
 
       /* Push the user return address after the argument data, and then
          jump to `doinit1' (above), so it is as if __libc_init_first's
          caller had called `doinit1' with the argument data already on the
          stack.  */
-      *--data = caller;
+      *--data = (intptr_t) caller;
       asm volatile ("movl %0, %%esp\n" /* Switch to new outermost stack.  */
 		    "movl $0, %%ebp\n" /* Clear outermost frame pointer.  */
 		    "jmp *%1" : : "r" (data), "r" (&doinit1) : "sp");
@@ -390,7 +390,7 @@
 
   first_init ();
 
-  _hurd_startup ((void **) __builtin_frame_address (0) + 2, &doinit);
+  _hurd_startup (&arg, &doinit);
 }
 #endif
 
